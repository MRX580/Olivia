from utils.database import User, Fortune

database = User()
database_fortune = Fortune()


lang = {
    'en': {
        'send_welcome': lambda
            call: f'Hello {database.get_name(call)}, my name is Olivia ü™Ñ\nI know how to guess, '
                  f'let\'s try? üëá ',
        'author': 'Author\'s cards üé¥',
        'author_cards': 'Author\'s cards üé¥',
        'standard': 'Standard cards üÉè',
        'standard_cards': 'Standard cards üÉè',
        'switch': 'Switch language üá∫üá∏üá∑üá∫',
        'fortune?': lambda m: f'tell fortunes? üîÆüëÅ\nOlivia Energy: {database.get_energy(m)}/100'
        if not database_fortune.is_first_try(m) else f'Nice to see you again, {database.get_name(m)} üòÅ'
                                                     f'\nOlivia Energy: {database.get_energy(m)}/100',
        'fortune': 'Let\'s try!',
        'back': 'Back',
        'repeat': lambda m: f'Do you want to repeat?üîÆ\nOlivia Energy: {database.get_energy(m)}/100',
        'repeat_again': 'Again!',
        'no_energy': 'Sorry, but Olivia is tired, she needs to recover!',
        'question': 'What do you think about this? Have questions?\nReply to one post',
        'question2': 'Great question... I\'ll think about it and answer someday if I can find an answer',
        'session': 'The session ended, you did not answer the question for 10 minutes',
        'fortune_menu': 'Where can I guess this time? ü§î',
        '1-d': 'Once a day',
        '7-d': 'Once a week',
        '30-d': 'Once a month',
        '1-d_fail': 'You already guessed today',
        '7-d_fail': 'You already guessed this week',
        '30-d_fail': 'You already guessed this month',
        'common': 'Ordinary divination(-50 energy)',
        'add_wisdom': 'Add wisdom üåà',
        'add_wisdom_text': 'Please teach me something new! \
        (what should I add or improve? I will take into account all useful comments and links) \
        Let\'s make magic together ‚ú®',
        'answer_wisdom': 'Thank you for your wisdom!\nI will listen to you',
        'history': 'History of divination',
    },
    'ru': {
        'send_welcome': lambda
            call: f'–ü—Ä–∏–≤–µ—Ç {database.get_name(call)}, –º–µ–Ω—è –∑–æ–≤—É—Ç –û–ª–∏–≤–∏—è ü™Ñ\n–Ø —É–º–µ—é –≥–∞–¥–∞—Ç—å, '
                  f'–¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º? üëá ',
        'author': '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–∞—Ä—Ç—ã üé¥',
        'author_cards': '–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –∫–∞—Ä—Ç—ã üé¥',
        'standard': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ã üÉè',
        'standard_cards': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ä—Ç—ã üÉè',
        'switch': '–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ üá∫üá∏üá∑üá∫',
        'fortune?': lambda m: f'–ü–æ–≥–∞–¥–∞–µ–º? üîÆüëÅ\n–≠–Ω–µ—Ä–≥–∏—è –û–ª–∏–≤–∏–∏: {database.get_energy(m)}/100'
        if not database_fortune.is_first_try(m) else f'–ü—Ä–∏—è—Ç–Ω–æ —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è, {database.get_name(m)} üòÅ\n\n'
                                                     f'–≠–Ω–µ—Ä–≥–∏—è –û–ª–∏–≤–∏–∏: {database.get_energy(m)}/100',
        'fortune': '–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º!',
        'back': '–ù–∞–∑–∞–¥',
        'repeat': lambda m: f'–•–æ—Ç–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å?üîÆ\n–≠–Ω–µ—Ä–≥–∏—è –û–ª–∏–≤–∏–∏: {database.get_energy(m)}/100',
        'repeat_again': '–ï—â–µ —Ä–∞–∑!',
        'no_energy': '–ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ –û–ª–∏–≤–∏—è —É—Å—Ç–∞–ª–∞, –µ–π –Ω—É–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è!',
        'question': '–ß—Ç–æ –¥—É–º–∞–µ—Ç–µ –ø–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É? –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?\n–î–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º',
        'question2': '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å... –ü–æ–¥—É–º–∞—é –∏ –æ—Ç–≤–µ—á—É –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å, –µ—Å–ª–∏ —Å–º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç',
        'session': '–°–µ–∞–Ω—Å –∑–∞–≤–µ—Ä—à–µ–Ω, –≤—ã –Ω–µ –æ—Ç–≤–µ—á–∞–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç',
        'fortune_menu': '–ì–¥–µ –∂–µ –º–Ω–µ –ø–æ–≥–∞–¥–∞—Ç—å –≤ —ç—Ç–æ—Ç —Ä–∞–∑? ü§î',
        '1-d': '–†–∞–∑ –≤ –¥–µ–Ω—å',
        '7-d': '–†–∞–∑ –≤ –Ω–µ–¥–µ–ª—é',
        '30-d': '–†–∞–∑ –≤ –º–µ—Å—è—Ü',
        '1-d_fail': '–í—ã —É–∂–µ –≥–∞–¥–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è',
        '7-d_fail': '–í—ã —É–∂–µ –≥–∞–¥–∞–ª–∏ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ',
        '30-d_fail': '–í—ã —É–∂–µ –≥–∞–¥–∞–ª–∏ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ',
        'common': '–û–±—ã—á–Ω–æ–µ –≥–∞–¥–∞–Ω–∏–µ(-50 —ç–Ω–µ—Ä–≥–∏–∏)',
        'add_wisdom': '–î–æ–±–∞–≤–∏—Ç—å –º—É–¥—Ä–æ—Å—Ç–∏ üåà',
        'add_wisdom_text': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—É—á–∏ –º–µ–Ω—è —á–µ–º—É-—Ç–æ –Ω–æ–≤–æ–º—É! \
(—á—Ç–æ –º–Ω–µ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–ª—É—á—à–∏—Ç—å? –£—á—Ç—É –≤—Å–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Å—Å—ã–ª–∫–∏) \
–î–∞–≤–∞–π —Ç–≤–æ—Ä–∏—Ç—å –º–∞–≥–∏—é –≤–º–µ—Å—Ç–µ ‚ú®',
        'answer_wisdom': '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –º—É–¥—Ä–æ—Å—Ç—å!\n–Ø –ø—Ä–∏—Å–ª—É—à–∞—é—Å—å –∫ –≤–∞–º',
        'history': '–ò—Å—Ç–æ—Ä–∏—è –≥–∞–¥–∞–Ω–∏–π',

    }
}
